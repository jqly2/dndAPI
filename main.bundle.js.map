{"version":3,"sources":["C:/Users/jonat/Coding_Projects/dndAPI/src/$_lazy_route_resource lazy","C:/Users/jonat/Coding_Projects/dndAPI/src/app/animation.ts","C:/Users/jonat/Coding_Projects/dndAPI/src/app/app-routing.module.ts","C:/Users/jonat/Coding_Projects/dndAPI/src/app/app.component.css","C:/Users/jonat/Coding_Projects/dndAPI/src/app/app.component.html","C:/Users/jonat/Coding_Projects/dndAPI/src/app/app.component.ts","C:/Users/jonat/Coding_Projects/dndAPI/src/app/app.module.ts","C:/Users/jonat/Coding_Projects/dndAPI/src/app/dn-data.service.ts","C:/Users/jonat/Coding_Projects/dndAPI/src/app/spell/spell.component.css","C:/Users/jonat/Coding_Projects/dndAPI/src/app/spell/spell.component.html","C:/Users/jonat/Coding_Projects/dndAPI/src/app/spell/spell.component.ts","C:/Users/jonat/Coding_Projects/dndAPI/src/app/spell/spell.filter.ts","C:/Users/jonat/Coding_Projects/dndAPI/src/environments/environment.ts","C:/Users/jonat/Coding_Projects/dndAPI/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/jonat/Coding_Projects/dndAPI/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import {\r\n    trigger,\r\n    state,\r\n    animate,\r\n    style,\r\n    transition\r\n} from '@angular/core';\r\n\r\nexport const animation = trigger('cardAnimation', [\r\n    state('small', style({\r\n        transform: 'scale(1)',\r\n    })),\r\n    state('large', style({\r\n        transform: 'scale(1)',\r\n    })),\r\n\r\n    transition('small <=> large', animate('1000ms ease-in')),\r\n]);\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/jonat/Coding_Projects/dndAPI/src/app/animation.ts","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SpellComponent } from './spell/spell.component';\n\n\nconst routes: Routes = [\n  { path: 'spell', component: SpellComponent },\n  { path: '', redirectTo: '/spell', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/jonat/Coding_Projects/dndAPI/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* Application-wide Styles */\\r\\nh1 {\\r\\n  color: #369;\\r\\n  font-family: Arial, Helvetica, sans-serif;\\r\\n  font-size: 250%;\\r\\n}\\r\\nh2, h3 {\\r\\n  color: #444;\\r\\n  font-family: Arial, Helvetica, sans-serif;\\r\\n  font-weight: lighter;\\r\\n}\\r\\nbody {\\r\\n  margin: 2em;\\r\\n}\\r\\nbody, input[text], button {\\r\\n  color: #888;\\r\\n  font-family: Cambria, Georgia;\\r\\n}\\r\\n/* everywhere else */\\r\\n* {\\r\\n  font-family: Arial, Helvetica, sans-serif;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/jonat/Coding_Projects/dndAPI/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div style=\\\"text-align:center\\\">\\r\\n  \\r\\n  <div id=\\\"header\\\">\\r\\n    <h1>Welcome to {{ title }}!</h1>       \\r\\n  </div>\\r\\n  \\r\\n  <hr>\\r\\n\\r\\n  <app-spell></app-spell>\\r\\n\\r\\n  <!-- Considering changing ngIf to hidden properties to keep DOM elements -->\\r\\n\\r\\n  <ng-template #credit>\\r\\n    <h3>\\r\\n      <a href=\\\"https://www.reddit.com/r/DnD/comments/6fga8k/5eocart_spell_cards_for_400_spells_from_5th/\\\">nBeebz</a> designed and created the following spell cards\\r\\n    </h3>\\r\\n    <p> The cards (as the icons and images used in them) are licensed under the Creative Commons License (CC BY-NC-SA 4.0). You are\\r\\n      free to modify and re-purpose them for non-commercial uses as long as you give appropriate credit, and release those derivative\\r\\n      works under the same license.\\r\\n    </p>\\r\\n  </ng-template>\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/jonat/Coding_Projects/dndAPI/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent {\r\n\r\n  // tslint:disable-next-line:member-ordering\r\n  title = 'the Compendium';\r\n\r\n  constructor() { }\r\n\r\n  // tslint:disable-next-line:use-life-cycle-interface\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/jonat/Coding_Projects/dndAPI/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n// Import HttpClientModule\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport { HttpModule } from '@angular/http';\r\nimport { SpellComponent } from './spell/spell.component';\r\nimport { AppRoutingModule } from './/app-routing.module';\r\nimport { SpellFilter } from './spell/spell.filter';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SpellComponent,\r\n    SpellFilter,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    HttpModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/jonat/Coding_Projects/dndAPI/src/app/app.module.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, Response } from '@angular/http';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { of } from 'rxjs/observable/of';\r\nimport 'rxjs/add/operator/map';\r\nimport { Spell } from './spell';\r\n\r\n@Injectable()\r\nexport class DnDataService {\r\n\r\n  constructor(private http: Http) { }\r\n\r\n  spells;\r\n  search = new Array();\r\n\r\n  getAllSpellData() {\r\n    this.spells = this.http.get('assets/dnd_spells/spells.json')\r\n      .map((res: Response) => res.json().jsonSpellData);\r\n    this.spells = this.spells.map((spell) => {\r\n      return spell;\r\n    });\r\n    return this.spells;\r\n  }\r\n\r\n  getFilterSpellData(submit, obj) {\r\n    this.search = new Array();\r\n    obj.map((data) => {\r\n      if (data.name.toLowerCase().includes(submit)) {\r\n        this.search.push(data);\r\n      }\r\n    });\r\n      if (this.search === undefined) {\r\n        return [];\r\n      }else {\r\n        return this.spells = this.search;\r\n      }\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/jonat/Coding_Projects/dndAPI/src/app/dn-data.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".cards {\\r\\n    display:inline-block;\\r\\n    width:30%;\\r\\n    height:auto;\\r\\n}\\r\\n\\r\\n#allSpells {\\r\\n    height:60em;\\r\\n    overflow:scroll;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/jonat/Coding_Projects/dndAPI/src/app/spell/spell.component.css\n// module id = ../../../../../src/app/spell/spell.component.css\n// module chunks = main","module.exports = \"<div id=\\\"taskbar\\\">\\n  <!-- Only only visible if spells were not able to be fetch on load -->\\n</div>\\n<input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"Search for Spell\\\">\\n<!-- Will run and try to get a blank image. Will fix that issue later -->\\n  <div [hidden]=\\\"!show\\\" id=\\\"allSpells\\\">\\n    <div class=\\\"cards\\\" *ngFor=\\\"let spell of spells | filter: searchText\\\" [@cardAnimation]='spell.state' (click)=\\\"zoomCard(spell)\\\" >\\n      <img src=\\\"assets/dnd_spells/dnd_cards/{{spell.name}}.png\\\" alt=\\\"WiP\\\" height=\\\"100%\\\" width=\\\"100%\\\">\\n     </div>            \\n  </div>\\n\\n  <div [hidden]=\\\"show\\\">\\n    <img [@cardAnimation]='selected.state' (click)=\\\"zoomCard(selected)\\\" src=\\\"assets/dnd_spells/dnd_cards/{{selected.name}}.png\\\" alt=\\\"{{selected.name}}/WiP\\\" max-height=\\\"80%\\\" max-width=\\\"80%\\\">\\n  </div>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/jonat/Coding_Projects/dndAPI/src/app/spell/spell.component.html\n// module id = ../../../../../src/app/spell/spell.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { DnDataService } from '../dn-data.service';\nimport { HttpClient } from '@angular/common/http';\nimport { trigger, state, style, transition, animate, keyframes } from '@angular/animations';\nimport { animation } from '../animation';\n// tslint:disable-next-line:import-blacklist\nimport { Observable } from 'rxjs';\nimport { Spell } from '../spell';\n\n\n@Component({\n  selector: 'app-spell',\n  templateUrl: './spell.component.html',\n  providers: [DnDataService],\n  styleUrls: ['./spell.component.css'],\n  animations: [animation],\n})\nexport class SpellComponent implements OnInit {\n\n  all;\n\n  spells: Spell[];\n\n  error;\n\n  state = '';\n\n  show = true;\n\n  selected: {};\n\n  constructor(private http: HttpClient, private dataService: DnDataService) { }\n\n  ngOnInit() {\n    this.getSpells();\n  }\n\n  getSpells() {\n    this.show = true;\n    this.selected = {};\n    this.dataService.getAllSpellData().subscribe((data) => {\n      console.log(data);\n      this.spells = data;\n    });\n\n  }\n\n  zoomCard(index) {\n\n    index.state = (index.state === 'small' ? 'large' : 'small');\n\n    if (index.state === 'large')\n    // tslint:disable-next-line:one-line\n    {\n      this.selected = index;\n      this.show = false;\n    }\n    // tslint:disable-next-line:one-line\n    else {\n      this.show = true;\n      this.selected = {};\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/jonat/Coding_Projects/dndAPI/src/app/spell/spell.component.ts","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DnDataService } from '../dn-data.service';\r\nimport { HttpClient } from '@angular/common/http';\r\n@Pipe({\r\n    name: 'filter'\r\n})\r\nexport class SpellFilter implements PipeTransform {\r\n    spells: [{}];\r\n    constructor(private http: HttpClient, private dataService: DnDataService) { }\r\n    transform(items: any[], searchText: string): any[] {\r\n        if (!items) {\r\n            return [];\r\n        }\r\n\r\n        if (!searchText) {\r\n            return items;\r\n        }\r\n        searchText = searchText.toLowerCase();\r\n        items = this.dataService.getFilterSpellData(searchText, items);\r\n        console.log(items);\r\n        return items;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/jonat/Coding_Projects/dndAPI/src/app/spell/spell.filter.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/jonat/Coding_Projects/dndAPI/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/jonat/Coding_Projects/dndAPI/src/main.ts"],"sourceRoot":"webpack:///"}